@model Bangazon.Models.OrderViewModels.OrderDetailViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Order Details</h1>
</hr>
<span></span>

@{ if (Model.Order == null)
    {
        <p>You have no items in your cart</p>
        <a asp-controller="Products" asp-action="ProductListByType"><p>Check out our fine selection of products</p></a>
    }
    else
    {
        <div>
            <div>
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Order.DateCreated)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Order.DateCreated)
                    </dd>
                    <dt class="col-sm-2">
                        Status
                    </dt>
                    <dd class="col-sm-10">
                        <button class="btn btn-success">Active</button>
                    </dd>
                </dl>
                    <form asp-controller="Orders" asp-action="Delete">
                        <input name="order-detail-to-be-deleted" type="hidden" asp-for="@Model.Order.OrderId"/>
                        <button type="submit" class="btn btn-danger">
                            Cancel Order?
                        </button>
                    </form>
            </div>

            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Product Name
                        </th>
                        <th>
                            Units to Purchase
                        </th>
                        <th>
                            Cost
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var li in Model.LineItems)
                    {
                        var orderProductToDelete = Model.OrderProducts.First(op => op.OrderId == Model.Order.OrderId && li.Product.ProductId == op.ProductId);
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => li.Product.Title)
                            </td>
                            @*add a way to edit #purchased in the element below(???)*@
                            <td>
                                @Html.DisplayFor(modelItem => li.Units)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => li.Cost)
                            </td>
                            <td>
                                <a asp-action="DeleteOrderProduct" asp-route-id=@orderProductToDelete.OrderProductId>Delete</a>
                            </td>
                        </tr>
                    }
            </tbody>
        </table>
            <table>
                <thead>
                    <tr>
                        <th>
                            Order Total
                        </th>
                        <th></th>
                        <th></th>
                        <th>
                            @{
                                var sumCost = Model.LineItems.Select(li =>li.Cost).Sum();
                            }
                                @Html.DisplayFor(m => sumCost)
                        </th>
                    </tr>
                </thead>
            </table>
    </div>
    <span></span>
    <div>
        <a asp-action="">Complete Your Order</a> |
        <a asp-action="Index">View Past Orders</a><br />
    </div>
} }
